Create buffer of HUGE size

(inside ISR, for every sample that's coming in [basically a while loop]).....

If user taps tempo
  ISR counts incoming samples at a certain pace
  
    playbackEnd = size of buffer
    tap tells beatCounter to start counting number of samples inputted
      if beatCounter*8 is as large as the buffer size
        set the count back to zero and do nothing
      else
        playbackEnd = beatCounter*8
        beatCounter=0
    
    if this count*8 < max buffer size
      //
    
      
  
  
  
  
  
  tap tempo function()
    //counts amount of samples taken in between first tap and second tap. After second tap, count is set to 0
    //if count is < max buffer size keep counting.  otherwise, the count should be set to 0.
    
        //Amount of samples inputted within those two taps represents 1 beats. This size is stored to variable (ie "BeatSize")
        //PlaybackEnd changes to the size of BeatSize * 8 (to get a manipulable buffer size of 8 beats)

elseif user taps "time travel" or any of the three "beat repeat" options
  if user presses "beat repeat 1"
    variable LoopStart = recordIndex
    LoopEnd = LoopStart+BeatSize
    while the BeatRepeat 1 button is still engaged, loopIndex (variable that outputs sample by sample between LStart and LEnd)
    plays
    LoopStart and LoopEnd = 0
    
  elseif user presses "beat repeat 1/2"
    variable LoopStart = recordIndex
    LoopEnd = LoopStart+(BeatSize/2)
    while the BeatRepeat 1 button is still engaged, loopIndex (variable that outputs sample by sample between LStart and LEnd)
    plays
    LoopStart and LoopEnd = 0
    
  elseif user presses "beat repeat 1/3"
    variable LoopStart = recordIndex
    LoopEnd = LoopStart+(BeatSize/3)
    while the BeatRepeat 1 button is still engaged, loopIndex (variable that outputs sample by sample between LStart and LEnd)
    plays
    LoopStart and LoopEnd = 0
  
  elseif user taps "time travel"
    //stuff
    
  else
    //do nothing?  go back to main menu?  huh?
  
else
  //dry playback




















BufferSize (size of array called Buffer) is set to large number
PlaybackBuffer (amount of Buffer available to manipulate)
PlaybackIndex (variable for what spot in the array is being accesssed [aka what sample in that spot is being outputted])
PlaybackSpeed (variable for how playback index steps through array)



User taps in tempo (1st tap starts input of counted samples, 2nd tap stops input of counted samples)
Amount of samples inputted within those two taps represents 1 beats. This size is stored to variable (ie "BeatSize")
PlaybackBuffer changes to the size of BeatSize * 8 (to get a manipulable buffer size of 8 beats)


Basic Manipulation design:
(example)
User presses Beat Repeat option, playback switches to "Wet"
As soon as the button is pressed, a variable LoopStart is set to the point in the array that marks the start of the beat being manipulated (repeated)
This automatically sets variable LoopEnd to the spot in the array that's 1 beat from LoopStart (value of BeatSize")
This section between LoopStart and LoopEnd is repeated while user continues to hold down Beat Repeat button
Once they release button, LoopStart and LoopEnd reset to zero.
Playback goes back to "Dry" playback
